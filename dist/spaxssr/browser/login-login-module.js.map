{"version":3,"sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/login/store/actions/login.actions.ts","./src/app/login/store/reducers/login.reducer.ts","./src/app/login/store/selectors/login.selectors.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEJ;;;AAEnD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAE,CAAC,CAAC;AAM1D,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AAC0B;AAGG;AAEZ;;;;AAO9D,MAAM,cAAc;IAIzB,YAAiC,UAAkB,EAAU,KAAmB,EAAU,MAAc,EAAS,OAAe;QAAnE,UAAK,GAAL,KAAK,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;QAC9H,IAAI,CAAC,SAAS,GAAG,yEAAiB,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iFAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClF,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;oBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;gBACH,oCAAoC;aACrC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE;oBAClC,OAAO,EAAE,eAAe;oBACxB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,EAAE;oBACZ,WAAW,EAAE,IAAI;oBACjB,OAAO,EAAE,MAAM;oBACf,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;oBACtC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;iBACvC,CAAC,CAAC;YACL,CAAC,EAAE,CAAC,CAAC;SACN;IACH,CAAC;IACD,gBAAgB;IAEhB,CAAC;IACD,SAAS,CAAC,UAAU;QAClB,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,UAAU,CAAC,eAAe,EAAE,CAAC,OAAO,EAAE;YAC5C,KAAK,EAAE,UAAU,CAAC,eAAe,EAAE,CAAC,WAAW,EAAE;YACjD,KAAK,EAAE,UAAU,CAAC,eAAe,EAAE,CAAC,QAAQ,EAAE;SAC/C;QACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,oFAAe,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC3D,CAAC;IACD,SAAS,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,oFAAe,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;;4EA5CU,cAAc,kEAIL,yDAAW;8FAJpB,cAAc;QCb3B,yEAEI;QACA,oEAGgC;QACpC,4DAAM;;6FDMO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;sCAK8C,MAAM;sBAAtC,oDAAM;uBAAC,yDAAW;;;;;;;;;;;;;;AEjBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEa;AACT;AACT;AACkB;;;AAarD,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBANb;YACP,4DAAY;YACZ,wEAAkB;YAClB,uDAAW,CAAC,UAAU,CAAC,6EAAyB,EAAE,qEAAiB,CAAC;SACrE;mIAEU,WAAW,mBAPP,+DAAc,aAE3B,4DAAY;QACZ,wEAAkB;6FAIT,WAAW;cARvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,+DAAc,CAAC;gBAC9B,OAAO,EAAE;oBACP,4DAAY;oBACZ,wEAAkB;oBAClB,uDAAW,CAAC,UAAU,CAAC,6EAAyB,EAAE,qEAAiB,CAAC;iBACrE;aACF;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE3C,MAAM,OAAO,GAAG,gEAAY,CACjC,kBAAkB,CACnB,CAAC;AAEK,MAAM,eAAe,GAAG,gEAAY,CACzC,yBAAyB,EACzB,yDAAK,EAAqB,CAC3B,CAAC;AAEK,MAAM,eAAe,GAAG,gEAAY,CACzC,yBAAyB,EACzB,yDAAK,EAAkB,CACxB,CAAC;;;;;;;;;;;;;ACdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAEC;AAElD,MAAM,eAAe,GAAG,OAAO,CAAC;AAOhC,MAAM,YAAY,GAAU;IACjC,QAAQ,EAAE,IAAI;CACf,CAAC;AAGK,MAAM,OAAO,GAAG,iEAAa,CAClC,YAAY,EAEZ,sDAAE,CAAC,8DAAoB,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EACxC,sDAAE,CAAC,sEAA4B,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IAClD,uCACI,KAAK,KACR,QAAQ,EAAC,MAAM,CAAC,QAAQ,IACxB;AACF,CAAC,CAAC,EACF,sDAAE,CAAC,sEAA4B,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IACjD,uCACK,KAAK,KACR,KAAK,EAAC,MAAM,CAAC,KAAK,IACnB;AACH,CAAC,CAAC,CAEH,CAAC;;;;;;;;;;;;;ACjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACb;AAEhD,MAAM,gBAAgB,GAAG,yEAAqB,CACnD,uEAAyB,CAC1B,CAAC;AAEK,MAAM,eAAe,GAAG,kEAAc,CAC3C,gBAAgB,EAChB,KAAK,CAAC,EAAE;IACN,OAAO,KAAK,CAAC,QAAQ,CAAC;AACxB,CAAC,CACF,CAAC;AAEK,MAAM,gBAAgB,GAAG,kEAAc,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE;IACrE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,CAAC,CAAC","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [{ path: '', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { isPlatformBrowser } from '@angular/common';\nimport { Component, Inject, OnInit, PLATFORM_ID,NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { doLoginsFailure, doLoginsSuccess } from './store/actions/login.actions';\nimport { State } from './store/reducers/login.reducer';\nimport { selectIsLoggedIn } from './store/selectors/login.selectors';\ndeclare const gapi;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  isBrowser: any;\n  chechLoginStatue$\n\n  constructor(@Inject(PLATFORM_ID) platformId: Object, private store: Store<State>, private router: Router,private _ngZone: NgZone) {\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  ngOnInit(): void {\n    this.chechLoginStatue$ = this.store.select(selectIsLoggedIn).subscribe((loggedIn) => {\n      if (loggedIn) {\n        this._ngZone.run(() => {\n          this.router.navigate(['./home']);\n        });\n        // this.router.navigate(['./home']);\n      }\n    });\n    if (this.isBrowser) {\n      setTimeout(() => {\n        gapi.signin2.render('spax-signin2', {\n          'scope': 'profile email',\n          'width': 240,\n          'height': 50,\n          'longtitle': true,\n          'theme': 'dark',\n          'onsuccess': this.onSuccess.bind(this),\n          'onfailure': this.onFailure.bind(this)\n        });\n      }, 0)\n    }\n  }\n  signInWithGoogle() {\n\n  }\n  onSuccess(googleUser) {\n    let user = {\n      name: googleUser.getBasicProfile().getName(),\n      image: googleUser.getBasicProfile().getImageUrl(),\n      email: googleUser.getBasicProfile().getEmail()\n    }\n    this.store.dispatch(doLoginsSuccess({ userData: user }));\n  }\n  onFailure(e) {\n    this.store.dispatch(doLoginsFailure({ error: e }));\n  }\n\n}\n","<div style=\"margin: auto;\ntext-align: center;\">\n    <!-- <button type=\"button\" (click)=\"signInWithGoogle()\" class=\"btn btn-primary\">Sign In With Google</button> -->\n    <div class=\"g-signin2\" id=\"spax-signin2\" data-onsuccess=\"onSignIn\" style=\"position: absolute;\n    display: inline-block;\n    top: 50%;\n    left: calc(50% - 120px);\"></div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromLogin from './store/reducers/login.reducer';\nimport { EffectsModule } from '@ngrx/effects';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    StoreModule.forFeature(fromLogin.loginFeatureKey, fromLogin.reducer)\n  ]\n})\nexport class LoginModule { }\n","import { createAction, props } from '@ngrx/store';\n\nexport const doLogin = createAction(\n  '[Login] Do Login'\n);\n\nexport const doLoginsSuccess = createAction(\n  '[Login] Load Do Success',\n  props<{ userData: any }>()\n);\n\nexport const doLoginsFailure = createAction(\n  '[Login] Load Do Failure',\n  props<{ error: any }>()\n);\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { AppState } from '../../../store/reducers';\nimport * as LoginActions from '../actions/login.actions';\n\nexport const loginFeatureKey = 'login';\n\nexport interface State extends AppState {\n  userData?: any;\n  error?:any;\n}\n\nexport const initialState: State = {\n  userData: null,\n};\n\n\nexport const reducer = createReducer(\n  initialState,\n\n  on(LoginActions.doLogin, state => state),\n  on(LoginActions.doLoginsSuccess, (state, action) => {\n   return {\n    ...state,\n    userData:action.userData\n   }\n  }),\n  on(LoginActions.doLoginsFailure, (state, action) => {\n    return {\n      ...state,\n      error:action.error\n    }\n  }),\n\n);\n\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as fromLogin from '../reducers/login.reducer';\n\nexport const selectLoginState = createFeatureSelector<fromLogin.State>(\n  fromLogin.loginFeatureKey\n);\n\nexport const selectLoginUser = createSelector(\n  selectLoginState,\n  state => {\n    return state.userData;\n  }\n);\n\nexport const selectIsLoggedIn = createSelector(selectLoginUser, user => {\n  return Boolean(user);\n})\n"],"sourceRoot":"webpack:///"}